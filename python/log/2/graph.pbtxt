node {
  name: "Train/Model/input_data"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "Train/Model/labels"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros"
  op: "Fill"
  input: "Train/Model/pack"
  input: "Train/Model/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_1"
  op: "Fill"
  input: "Train/Model/pack_1"
  input: "Train/Model/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_2"
  op: "Fill"
  input: "Train/Model/pack_2"
  input: "Train/Model/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_3"
  op: "Fill"
  input: "Train/Model/pack_3"
  input: "Train/Model/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_4"
  op: "Fill"
  input: "Train/Model/pack_4"
  input: "Train/Model/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_5"
  op: "Fill"
  input: "Train/Model/pack_5"
  input: "Train/Model/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/transpose"
  op: "Transpose"
  input: "Train/Model/input_data"
  input: "Train/Model/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/ToInt32/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/sequence_length"
  op: "Identity"
  input: "Train/Model/ToInt32/x"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/RNN/Shape"
  input: "Train/Model/RNN/strided_slice/pack"
  input: "Train/Model/RNN/strided_slice/pack_1"
  input: "Train/Model/RNN/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_1"
  op: "StridedSlice"
  input: "Train/Model/RNN/Shape"
  input: "Train/Model/RNN/strided_slice_1/pack"
  input: "Train/Model/RNN/strided_slice_1/pack_1"
  input: "Train/Model/RNN/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Train/Model/RNN/pack"
  op: "Pack"
  input: "Train/Model/RNN/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/RNN/Equal"
  op: "Equal"
  input: "Train/Model/RNN/Shape_1"
  input: "Train/Model/RNN/pack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/All"
  op: "All"
  input: "Train/Model/RNN/Equal"
  input: "Train/Model/RNN/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "Train/Model/RNN/All"
  input: "Train/Model/RNN/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "Train/Model/RNN/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "Train/Model/RNN/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "Train/Model/RNN/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^Train/Model/RNN/Assert/AssertGuard/switch_t"
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "Train/Model/RNN/Assert/AssertGuard/switch_t"
  input: "^Train/Model/RNN/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^Train/Model/RNN/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor Train/Model/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^Train/Model/RNN/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "Train/Model/RNN/All"
  input: "Train/Model/RNN/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/All"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "Train/Model/RNN/pack"
  input: "Train/Model/RNN/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/pack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "Train/Model/RNN/Shape_1"
  input: "Train/Model/RNN/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "Train/Model/RNN/Assert/AssertGuard/Assert/Switch"
  input: "Train/Model/RNN/Assert/AssertGuard/Assert/data_0"
  input: "Train/Model/RNN/Assert/AssertGuard/Assert/Switch_1"
  input: "Train/Model/RNN/Assert/AssertGuard/Assert/data_2"
  input: "Train/Model/RNN/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "Train/Model/RNN/Assert/AssertGuard/switch_f"
  input: "^Train/Model/RNN/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "Train/Model/RNN/Assert/AssertGuard/control_dependency_1"
  input: "Train/Model/RNN/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/CheckSeqLen"
  op: "Identity"
  input: "Train/Model/sequence_length"
  input: "^Train/Model/RNN/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_2"
  op: "StridedSlice"
  input: "Train/Model/RNN/Shape_2"
  input: "Train/Model/RNN/strided_slice_2/pack"
  input: "Train/Model/RNN/strided_slice_2/pack_1"
  input: "Train/Model/RNN/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_3/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_3/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_3/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_3"
  op: "StridedSlice"
  input: "Train/Model/RNN/Shape_2"
  input: "Train/Model/RNN/strided_slice_3/pack"
  input: "Train/Model/RNN/strided_slice_3/pack_1"
  input: "Train/Model/RNN/strided_slice_3/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/pack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Train/Model/RNN/pack_1"
  op: "Pack"
  input: "Train/Model/RNN/strided_slice_3"
  input: "Train/Model/RNN/pack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/RNN/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/zeros"
  op: "Fill"
  input: "Train/Model/RNN/pack_1"
  input: "Train/Model/RNN/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Min"
  op: "Min"
  input: "Train/Model/RNN/CheckSeqLen"
  input: "Train/Model/RNN/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/RNN/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/Max"
  op: "Max"
  input: "Train/Model/RNN/CheckSeqLen"
  input: "Train/Model/RNN/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/RNN/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArray"
  op: "TensorArray"
  input: "Train/Model/RNN/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Train/Model/RNN/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArray/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArray_1"
  op: "TensorArray"
  input: "Train/Model/RNN/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Train/Model/RNN/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArray_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/strided_slice/pack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/RNN/TensorArrayPack/Shape"
  input: "Train/Model/RNN/TensorArrayPack/strided_slice/pack"
  input: "Train/Model/RNN/TensorArrayPack/strided_slice/pack_1"
  input: "Train/Model/RNN/TensorArrayPack/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/range"
  op: "Range"
  input: "Train/Model/RNN/TensorArrayPack/range/start"
  input: "Train/Model/RNN/TensorArrayPack/strided_slice"
  input: "Train/Model/RNN/TensorArrayPack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/TensorArrayScatter"
  op: "TensorArrayScatter"
  input: "Train/Model/RNN/TensorArray_1"
  input: "Train/Model/RNN/TensorArrayPack/range"
  input: "Train/Model/transpose"
  input: "Train/Model/RNN/TensorArray_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack/TensorArray/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Enter"
  op: "Enter"
  input: "Train/Model/RNN/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Enter_1"
  op: "Enter"
  input: "Train/Model/RNN/TensorArray/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Enter_2"
  op: "Enter"
  input: "Train/Model/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Enter_3"
  op: "Enter"
  input: "Train/Model/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Enter_4"
  op: "Enter"
  input: "Train/Model/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Enter_5"
  op: "Enter"
  input: "Train/Model/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Enter_6"
  op: "Enter"
  input: "Train/Model/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Enter_7"
  op: "Enter"
  input: "Train/Model/zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Merge"
  op: "Merge"
  input: "Train/Model/RNN/while/Enter"
  input: "Train/Model/RNN/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Merge_1"
  op: "Merge"
  input: "Train/Model/RNN/while/Enter_1"
  input: "Train/Model/RNN/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Merge_2"
  op: "Merge"
  input: "Train/Model/RNN/while/Enter_2"
  input: "Train/Model/RNN/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Merge_3"
  op: "Merge"
  input: "Train/Model/RNN/while/Enter_3"
  input: "Train/Model/RNN/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Merge_4"
  op: "Merge"
  input: "Train/Model/RNN/while/Enter_4"
  input: "Train/Model/RNN/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Merge_5"
  op: "Merge"
  input: "Train/Model/RNN/while/Enter_5"
  input: "Train/Model/RNN/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Merge_6"
  op: "Merge"
  input: "Train/Model/RNN/while/Enter_6"
  input: "Train/Model/RNN/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Merge_7"
  op: "Merge"
  input: "Train/Model/RNN/while/Enter_7"
  input: "Train/Model/RNN/while/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Less/Enter"
  op: "Enter"
  input: "Train/Model/RNN/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Less"
  op: "Less"
  input: "Train/Model/RNN/while/Merge"
  input: "Train/Model/RNN/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/LoopCond"
  op: "LoopCond"
  input: "Train/Model/RNN/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Switch"
  op: "Switch"
  input: "Train/Model/RNN/while/Merge"
  input: "Train/Model/RNN/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Switch_1"
  op: "Switch"
  input: "Train/Model/RNN/while/Merge_1"
  input: "Train/Model/RNN/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Switch_2"
  op: "Switch"
  input: "Train/Model/RNN/while/Merge_2"
  input: "Train/Model/RNN/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Switch_3"
  op: "Switch"
  input: "Train/Model/RNN/while/Merge_3"
  input: "Train/Model/RNN/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Switch_4"
  op: "Switch"
  input: "Train/Model/RNN/while/Merge_4"
  input: "Train/Model/RNN/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Switch_5"
  op: "Switch"
  input: "Train/Model/RNN/while/Merge_5"
  input: "Train/Model/RNN/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Switch_6"
  op: "Switch"
  input: "Train/Model/RNN/while/Merge_6"
  input: "Train/Model/RNN/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Switch_7"
  op: "Switch"
  input: "Train/Model/RNN/while/Merge_7"
  input: "Train/Model/RNN/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Identity"
  op: "Identity"
  input: "Train/Model/RNN/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Identity_1"
  op: "Identity"
  input: "Train/Model/RNN/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Identity_2"
  op: "Identity"
  input: "Train/Model/RNN/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Identity_3"
  op: "Identity"
  input: "Train/Model/RNN/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Identity_4"
  op: "Identity"
  input: "Train/Model/RNN/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Identity_5"
  op: "Identity"
  input: "Train/Model/RNN/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Identity_6"
  op: "Identity"
  input: "Train/Model/RNN/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Identity_7"
  op: "Identity"
  input: "Train/Model/RNN/while/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/TensorArrayRead/RefEnter"
  op: "RefEnter"
  input: "Train/Model/RNN/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/TensorArrayRead/Enter"
  op: "Enter"
  input: "Train/Model/RNN/TensorArrayPack/TensorArrayScatter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/TensorArrayRead"
  op: "TensorArrayRead"
  input: "Train/Model/RNN/while/TensorArrayRead/RefEnter"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/TensorArrayRead/Enter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/while/TensorArrayRead"
  input: "Train/Model/RNN/while/Identity_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter"
  op: "Enter"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter"
  op: "Enter"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/RNN/while/Identity_2"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/keep_prob"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Shape"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/min"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/max"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/sub"
  op: "Sub"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/max"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/mul"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/RandomUniform"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/add"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/keep_prob"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Floor"
  op: "Floor"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div"
  op: "Div"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul"
  input: "Train/Model/RNN/while/Identity_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter"
  op: "Enter"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter"
  op: "Enter"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/RNN/while/Identity_4"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/keep_prob"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Shape"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/min"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/max"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/sub"
  op: "Sub"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/max"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/mul"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/RandomUniform"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/add"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/keep_prob"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Floor"
  op: "Floor"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div"
  op: "Div"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul"
  input: "Train/Model/RNN/while/Identity_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter"
  op: "Enter"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter"
  op: "Enter"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1/y"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/RNN/while/Identity_6"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/keep_prob"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Shape"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/min"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/max"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/sub"
  op: "Sub"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/max"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/mul"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/RandomUniform"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/add"
  op: "Add"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/keep_prob"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Floor"
  op: "Floor"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div"
  op: "Div"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul"
  op: "Mul"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/GreaterEqual/Enter"
  op: "Enter"
  input: "Train/Model/RNN/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/GreaterEqual"
  op: "GreaterEqual"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Select/Enter"
  op: "Enter"
  input: "Train/Model/RNN/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/Select"
  op: "Select"
  input: "Train/Model/RNN/while/GreaterEqual"
  input: "Train/Model/RNN/while/Select/Enter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Select_1"
  op: "Select"
  input: "Train/Model/RNN/while/GreaterEqual_1"
  input: "Train/Model/RNN/while/Identity_2"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/GreaterEqual_2"
  op: "GreaterEqual"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Select_2"
  op: "Select"
  input: "Train/Model/RNN/while/GreaterEqual_2"
  input: "Train/Model/RNN/while/Identity_3"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/GreaterEqual_3"
  op: "GreaterEqual"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Select_3"
  op: "Select"
  input: "Train/Model/RNN/while/GreaterEqual_3"
  input: "Train/Model/RNN/while/Identity_4"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/GreaterEqual_4"
  op: "GreaterEqual"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Select_4"
  op: "Select"
  input: "Train/Model/RNN/while/GreaterEqual_4"
  input: "Train/Model/RNN/while/Identity_5"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/GreaterEqual_5"
  op: "GreaterEqual"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Select_5"
  op: "Select"
  input: "Train/Model/RNN/while/GreaterEqual_5"
  input: "Train/Model/RNN/while/Identity_6"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/GreaterEqual_6"
  op: "GreaterEqual"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Select_6"
  op: "Select"
  input: "Train/Model/RNN/while/GreaterEqual_6"
  input: "Train/Model/RNN/while/Identity_7"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/TensorArrayWrite/RefEnter"
  op: "RefEnter"
  input: "Train/Model/RNN/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/RNN/while/TensorArrayWrite"
  op: "TensorArrayWrite"
  input: "Train/Model/RNN/while/TensorArrayWrite/RefEnter"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/Select"
  input: "Train/Model/RNN/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/TensorArray_2/Const"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/add/y"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/add"
  op: "Add"
  input: "Train/Model/RNN/while/Identity"
  input: "Train/Model/RNN/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/NextIteration"
  op: "NextIteration"
  input: "Train/Model/RNN/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/NextIteration_1"
  op: "NextIteration"
  input: "Train/Model/RNN/while/TensorArrayWrite"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/NextIteration_2"
  op: "NextIteration"
  input: "Train/Model/RNN/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/NextIteration_3"
  op: "NextIteration"
  input: "Train/Model/RNN/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/NextIteration_4"
  op: "NextIteration"
  input: "Train/Model/RNN/while/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/NextIteration_5"
  op: "NextIteration"
  input: "Train/Model/RNN/while/Select_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/NextIteration_6"
  op: "NextIteration"
  input: "Train/Model/RNN/while/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/NextIteration_7"
  op: "NextIteration"
  input: "Train/Model/RNN/while/Select_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Exit"
  op: "Exit"
  input: "Train/Model/RNN/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Exit_1"
  op: "Exit"
  input: "Train/Model/RNN/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Exit_2"
  op: "Exit"
  input: "Train/Model/RNN/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Exit_3"
  op: "Exit"
  input: "Train/Model/RNN/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Exit_4"
  op: "Exit"
  input: "Train/Model/RNN/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Exit_5"
  op: "Exit"
  input: "Train/Model/RNN/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Exit_6"
  op: "Exit"
  input: "Train/Model/RNN/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/while/Exit_7"
  op: "Exit"
  input: "Train/Model/RNN/while/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack_1/TensorArraySize"
  op: "TensorArraySize"
  input: "Train/Model/RNN/TensorArray"
  input: "Train/Model/RNN/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack_1/range"
  op: "Range"
  input: "Train/Model/RNN/TensorArrayPack_1/range/start"
  input: "Train/Model/RNN/TensorArrayPack_1/TensorArraySize"
  input: "Train/Model/RNN/TensorArrayPack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/TensorArrayPack_1/TensorArrayGather"
  op: "TensorArrayGather"
  input: "Train/Model/RNN/TensorArray"
  input: "Train/Model/RNN/TensorArrayPack_1/range"
  input: "Train/Model/RNN/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/transpose"
  op: "Transpose"
  input: "Train/Model/RNN/TensorArrayPack_1/TensorArrayGather"
  input: "Train/Model/RNN/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/Reshape"
  op: "Reshape"
  input: "Train/Model/RNN/transpose"
  input: "Train/Model/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/fully_connected/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\0002\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/fully_connected/unpack"
  op: "Unpack"
  input: "Train/Model/fully_connected/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/fully_connected/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/fully_connected/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Model/fully_connected/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.173205077648
      }
    }
  }
}
node {
  name: "Model/fully_connected/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.173205077648
      }
    }
  }
}
node {
  name: "Model/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/fully_connected/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/fully_connected/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/fully_connected/weights/Initializer/random_uniform/max"
  input: "Model/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/fully_connected/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  input: "Model/fully_connected/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Model/fully_connected/weights/Initializer/random_uniform"
  op: "Add"
  input: "Model/fully_connected/weights/Initializer/random_uniform/mul"
  input: "Model/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Model/fully_connected/weights/Assign"
  op: "Assign"
  input: "Model/fully_connected/weights"
  input: "Model/fully_connected/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/fully_connected/weights/read"
  op: "Identity"
  input: "Model/fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/fully_connected/MatMul"
  op: "MatMul"
  input: "Train/Model/Reshape"
  input: "Model/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/fully_connected/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/fully_connected/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/fully_connected/biases/Assign"
  op: "Assign"
  input: "Model/fully_connected/biases"
  input: "Model/fully_connected/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/fully_connected/biases/read"
  op: "Identity"
  input: "Model/fully_connected/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "Train/Model/fully_connected/MatMul"
  input: "Model/fully_connected/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Train/Model/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/Reshape_1"
  op: "Reshape"
  input: "Train/Model/labels"
  input: "Train/Model/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12800
      }
    }
  }
}
node {
  name: "Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "Train/Model/fully_connected/BiasAdd"
  input: "Train/Model/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
        }
        shape {
          dim {
            size: 12800
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/Mean"
  op: "Mean"
  input: "Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Train/Model/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/global_step"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/global_step/Assign"
  op: "Assign"
  input: "Train/Model/global_step"
  input: "Train/Model/global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/global_step/read"
  op: "Identity"
  input: "Train/Model/global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/learning_rate/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "Train/Model/learning_rate/Cast"
  op: "Cast"
  input: "Train/Model/global_step/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/learning_rate/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "Train/Model/learning_rate/Cast_1"
  op: "Cast"
  input: "Train/Model/learning_rate/Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/learning_rate/Cast_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.97000002861
      }
    }
  }
}
node {
  name: "Train/Model/learning_rate/truediv"
  op: "Div"
  input: "Train/Model/learning_rate/Cast"
  input: "Train/Model/learning_rate/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/learning_rate/Floor"
  op: "Floor"
  input: "Train/Model/learning_rate/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/learning_rate/Pow"
  op: "Pow"
  input: "Train/Model/learning_rate/Cast_2/x"
  input: "Train/Model/learning_rate/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/learning_rate"
  op: "Mul"
  input: "Train/Model/learning_rate/learning_rate"
  input: "Train/Model/learning_rate/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Fill"
  op: "Fill"
  input: "Train/Model/gradients/Shape"
  input: "Train/Model/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/f_count_1"
  op: "Enter"
  input: "Train/Model/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Merge"
  op: "Merge"
  input: "Train/Model/gradients/f_count_1"
  input: "Train/Model/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Merge"
  input: "Train/Model/RNN/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Add/y"
  op: "Const"
  input: "^Train/Model/RNN/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Add"
  op: "Add"
  input: "Train/Model/gradients/Switch:1"
  input: "Train/Model/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Add"
  input: "^Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/f_count_2"
  op: "Exit"
  input: "Train/Model/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/b_count_1"
  op: "Enter"
  input: "Train/Model/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Merge_1"
  op: "Merge"
  input: "Train/Model/gradients/b_count_1"
  input: "Train/Model/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "Train/Model/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "Train/Model/gradients/Merge_1"
  input: "Train/Model/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/b_count_2"
  op: "LoopCond"
  input: "Train/Model/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Switch_1"
  op: "Switch"
  input: "Train/Model/gradients/Merge_1"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Sub"
  op: "Sub"
  input: "Train/Model/gradients/Switch_1:1"
  input: "Train/Model/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/NextIteration_1"
  op: "NextIteration"
  input: "Train/Model/gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/b_count_3"
  op: "Exit"
  input: "Train/Model/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Fill"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12800
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Tile"
  op: "Tile"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12800
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Prod"
  op: "Prod"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Shape"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Prod_1"
  op: "Prod"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Shape_1"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Maximum"
  op: "Maximum"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Prod_1"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/floordiv"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Prod"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/Cast"
  op: "Cast"
  input: "Train/Model/gradients/Train/Model/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Mean_grad/truediv"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Tile"
  input: "Train/Model/gradients/Train/Model/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "Train/Model/gradients/Train/Model/Mean_grad/truediv"
  input: "Train/Model/gradients/Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Train/Model/gradients/Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "Model/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12800
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/Reshape"
  input: "Train/Model/gradients/Train/Model/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/fully_connected/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Train/Model/RNN/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/transpose_grad/transpose"
  op: "Transpose"
  input: "Train/Model/gradients/Train/Model/Reshape_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/TensorArrayPack_1/TensorArrayGather_grad/TensorArray/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/TensorArrayPack_1/TensorArrayGather_grad/TensorArrayGrad/TensorArrayGrad"
  op: "TensorArrayGrad"
  input: "Train/Model/RNN/TensorArray"
  input: "Train/Model/RNN/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Train/Model/gradients"
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/TensorArrayPack_1/TensorArrayGather_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "Train/Model/RNN/while/Exit_1"
  input: "^Train/Model/gradients/Train/Model/RNN/TensorArrayPack_1/TensorArrayGather_grad/TensorArrayGrad/TensorArrayGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/TensorArrayPack_1/TensorArrayGather_grad/TensorArrayScatter"
  op: "TensorArrayScatter"
  input: "Train/Model/gradients/Train/Model/RNN/TensorArrayPack_1/TensorArrayGather_grad/TensorArrayGrad/TensorArrayGrad"
  input: "Train/Model/RNN/TensorArrayPack_1/range"
  input: "Train/Model/gradients/Train/Model/RNN/transpose_grad/transpose"
  input: "Train/Model/gradients/Train/Model/RNN/TensorArrayPack_1/TensorArrayGather_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/TensorArrayPack_1/TensorArrayGather_grad/TensorArray_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/RNN/TensorArrayPack_1/TensorArrayGather_grad/TensorArrayScatter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Exit_7_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/Exit_1_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/Exit_2_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/Exit_3_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/Exit_4_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/Exit_5_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_5_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/Exit_6_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_6_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_7_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/Exit_7_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_7_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_1_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_2_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_3_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_4_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_5_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_6_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Merge_7_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/Switch_7_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArray/Const"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayGrad/TensorArrayGrad/RefEnter"
  op: "RefEnter"
  input: "Train/Model/RNN/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayGrad/TensorArrayGrad"
  op: "TensorArrayGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayGrad/TensorArrayGrad/RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_1_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Train/Model/gradients"
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_1_grad/Switch:1"
  input: "^Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayGrad/TensorArrayGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
        s: "loc:@Train/Model/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
        s: "loc:@Train/Model/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/RefEnter"
  input: "Train/Model/RNN/while/Identity"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
        s: "loc:@Train/Model/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
        s: "loc:@Train/Model/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
        s: "loc:@Train/Model/RNN/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead"
  op: "TensorArrayRead"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayGrad/TensorArrayGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/RefEnter"
  input: "Train/Model/RNN/while/Identity_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/RefEnter"
  input: "Train/Model/RNN/while/GreaterEqual_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_2_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select_1"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/RefEnter"
  input: "Train/Model/RNN/while/Identity_3"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/RefEnter"
  input: "Train/Model/RNN/while/GreaterEqual_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_3_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select_1"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/zeros_like"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/RefEnter"
  input: "Train/Model/RNN/while/Identity_4"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/RefEnter"
  input: "Train/Model/RNN/while/GreaterEqual_3"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_4_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select_1"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_4_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/RefEnter"
  input: "Train/Model/RNN/while/Identity_5"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/RefEnter"
  input: "Train/Model/RNN/while/GreaterEqual_4"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_5_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select_1"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/zeros_like"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_5_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/RefEnter"
  input: "Train/Model/RNN/while/Identity_6"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/RefEnter"
  input: "Train/Model/RNN/while/GreaterEqual_5"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_6_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select_1"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_6_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/RefEnter"
  input: "Train/Model/RNN/while/Identity_7"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/RefEnter"
  input: "Train/Model/RNN/while/GreaterEqual_6"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_7_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select_1"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/zeros_like"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_7_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "Train/Model/RNN/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/zeros_like/Enter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/RefEnter"
  input: "Train/Model/RNN/while/GreaterEqual"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select_1"
  op: "Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/zeros_like"
  input: "Train/Model/gradients/Train/Model/RNN/while/TensorArrayWrite_grad/TensorArrayRead"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Floor"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_grad/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/RNN/while/Merge_1_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/keep_prob"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg"
  op: "Neg"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Square"
  op: "Square"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv_1"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Neg"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/dropout/Div_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_1"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/zeros_like/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_2"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_5_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 400
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Floor"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_3"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_6_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/keep_prob"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg"
  op: "Neg"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Square"
  op: "Square"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv_1"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Neg"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_7_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_4"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/dropout/Div_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN_4"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_5"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_5"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_5"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/zeros_like/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_6"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_3_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 400
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Floor"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_7"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_4_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/keep_prob"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg"
  op: "Neg"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Square"
  op: "Square"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv_1"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Neg"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_8"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/dropout/Div_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN_8"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_9"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_9"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_9"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/zeros_like/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_10"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 400
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/RefEnter"
  input: "Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset/StackPop"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/RNN/while/Train/Model/RNN/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_11"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/fully_connected/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/pack"
  op: "Pack"
  input: "Train/Model/global_norm/L2Loss"
  input: "Train/Model/global_norm/L2Loss_1"
  input: "Train/Model/global_norm/L2Loss_2"
  input: "Train/Model/global_norm/L2Loss_3"
  input: "Train/Model/global_norm/L2Loss_4"
  input: "Train/Model/global_norm/L2Loss_5"
  input: "Train/Model/global_norm/L2Loss_6"
  input: "Train/Model/global_norm/L2Loss_7"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/Sum"
  op: "Sum"
  input: "Train/Model/global_norm/pack"
  input: "Train/Model/global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/mul"
  op: "Mul"
  input: "Train/Model/global_norm/Sum"
  input: "Train/Model/global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/global_norm"
  op: "Sqrt"
  input: "Train/Model/global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/truediv"
  op: "Div"
  input: "Train/Model/clip_by_global_norm/truediv/x"
  input: "Train/Model/global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/truediv_1"
  op: "Div"
  input: "Train/Model/clip_by_global_norm/Const"
  input: "Train/Model/clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "Train/Model/clip_by_global_norm/truediv"
  input: "Train/Model/clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul"
  op: "Mul"
  input: "Train/Model/clip_by_global_norm/mul/x"
  input: "Train/Model/clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_0"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_3"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_1"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell0/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_2"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_3"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_3"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell1/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_4"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_3"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_5"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/while/MultiRNNCell/Cell2/BasicLSTMCell/add/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_7"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/fully_connected/MatMul_grad/MatMul_1"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_6"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_8"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_7"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Train/Model/beta1_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/beta1_power/Assign"
  op: "Assign"
  input: "Train/Model/beta1_power"
  input: "Train/Model/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/beta1_power/read"
  op: "Identity"
  input: "Train/Model/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Train/Model/beta2_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/beta2_power/Assign"
  op: "Assign"
  input: "Train/Model/beta2_power"
  input: "Train/Model/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/beta2_power/read"
  op: "Identity"
  input: "Train/Model/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
  input: "Train/Model/zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "Train/Model/zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
  input: "Train/Model/zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "Train/Model/zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
  input: "Train/Model/zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "Train/Model/zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
  input: "Train/Model/zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "Train/Model/zeros_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
  input: "Train/Model/zeros_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "Train/Model/zeros_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
  input: "Train/Model/zeros_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1/Assign"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "Train/Model/zeros_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1/read"
  op: "Identity"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "Train/Model/Model/fully_connected/weights/Adam"
  input: "Train/Model/zeros_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/weights/Adam/read"
  op: "Identity"
  input: "Train/Model/Model/fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "Train/Model/Model/fully_connected/weights/Adam_1"
  input: "Train/Model/zeros_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "Train/Model/Model/fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/biases/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/biases/Adam/Assign"
  op: "Assign"
  input: "Train/Model/Model/fully_connected/biases/Adam"
  input: "Train/Model/zeros_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/biases/Adam/read"
  op: "Identity"
  input: "Train/Model/Model/fully_connected/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/zeros_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/biases/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/biases/Adam_1/Assign"
  op: "Assign"
  input: "Train/Model/Model/fully_connected/biases/Adam_1"
  input: "Train/Model/zeros_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Model/fully_connected/biases/Adam_1/read"
  op: "Identity"
  input: "Train/Model/Model/fully_connected/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Train/Model/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Train/Model/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  op: "ApplyAdam"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "Train/Model/beta1_power/read"
  input: "Train/Model/beta2_power/read"
  input: "Train/Model/learning_rate"
  input: "Train/Model/Adam/beta1"
  input: "Train/Model/Adam/beta2"
  input: "Train/Model/Adam/epsilon"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "Train/Model/beta1_power/read"
  input: "Train/Model/beta2_power/read"
  input: "Train/Model/learning_rate"
  input: "Train/Model/Adam/beta1"
  input: "Train/Model/Adam/beta2"
  input: "Train/Model/Adam/epsilon"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  op: "ApplyAdam"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "Train/Model/beta1_power/read"
  input: "Train/Model/beta2_power/read"
  input: "Train/Model/learning_rate"
  input: "Train/Model/Adam/beta1"
  input: "Train/Model/Adam/beta2"
  input: "Train/Model/Adam/epsilon"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "Train/Model/beta1_power/read"
  input: "Train/Model/beta2_power/read"
  input: "Train/Model/learning_rate"
  input: "Train/Model/Adam/beta1"
  input: "Train/Model/Adam/beta2"
  input: "Train/Model/Adam/epsilon"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  op: "ApplyAdam"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "Train/Model/beta1_power/read"
  input: "Train/Model/beta2_power/read"
  input: "Train/Model/learning_rate"
  input: "Train/Model/Adam/beta1"
  input: "Train/Model/Adam/beta2"
  input: "Train/Model/Adam/epsilon"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "Train/Model/beta1_power/read"
  input: "Train/Model/beta2_power/read"
  input: "Train/Model/learning_rate"
  input: "Train/Model/Adam/beta1"
  input: "Train/Model/Adam/beta2"
  input: "Train/Model/Adam/epsilon"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adam/update_Model/fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "Model/fully_connected/weights"
  input: "Train/Model/Model/fully_connected/weights/Adam"
  input: "Train/Model/Model/fully_connected/weights/Adam_1"
  input: "Train/Model/beta1_power/read"
  input: "Train/Model/beta2_power/read"
  input: "Train/Model/learning_rate"
  input: "Train/Model/Adam/beta1"
  input: "Train/Model/Adam/beta2"
  input: "Train/Model/Adam/epsilon"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adam/update_Model/fully_connected/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "Model/fully_connected/biases"
  input: "Train/Model/Model/fully_connected/biases/Adam"
  input: "Train/Model/Model/fully_connected/biases/Adam_1"
  input: "Train/Model/beta1_power/read"
  input: "Train/Model/beta2_power/read"
  input: "Train/Model/learning_rate"
  input: "Train/Model/Adam/beta1"
  input: "Train/Model/Adam/beta2"
  input: "Train/Model/Adam/epsilon"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adam/mul"
  op: "Mul"
  input: "Train/Model/beta1_power/read"
  input: "Train/Model/Adam/beta1"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/fully_connected/weights/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/fully_connected/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/Adam/Assign"
  op: "Assign"
  input: "Train/Model/beta1_power"
  input: "Train/Model/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Adam/mul_1"
  op: "Mul"
  input: "Train/Model/beta2_power/read"
  input: "Train/Model/Adam/beta2"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/fully_connected/weights/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/fully_connected/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/Adam/Assign_1"
  op: "Assign"
  input: "Train/Model/beta2_power"
  input: "Train/Model/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Adam/update"
  op: "NoOp"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/fully_connected/weights/ApplyAdam"
  input: "^Train/Model/Adam/update_Model/fully_connected/biases/ApplyAdam"
  input: "^Train/Model/Adam/Assign"
  input: "^Train/Model/Adam/Assign_1"
}
node {
  name: "Train/Model/Adam/value"
  op: "Const"
  input: "^Train/Model/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/Adam"
  op: "AssignAdd"
  input: "Train/Model/global_step"
  input: "Train/Model/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "Train/Model/ScalarSummary"
  op: "ScalarSummary"
  input: "Train/Model/ScalarSummary/tags"
  input: "Train/Model/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/ScalarSummary_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "Train/Model/ScalarSummary_1"
  op: "ScalarSummary"
  input: "Train/Model/ScalarSummary_1/tags"
  input: "Train/Model/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "Train/Model/ScalarSummary"
  input: "Train/Model/ScalarSummary_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 27
          }
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/fully_connected/biases"
        string_val: "Model/fully_connected/weights"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
        string_val: "Train/Model/Model/fully_connected/biases/Adam"
        string_val: "Train/Model/Model/fully_connected/biases/Adam_1"
        string_val: "Train/Model/Model/fully_connected/weights/Adam"
        string_val: "Train/Model/Model/fully_connected/weights/Adam_1"
        string_val: "Train/Model/beta1_power"
        string_val: "Train/Model/beta2_power"
        string_val: "Train/Model/global_step"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 27
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  input: "Model/fully_connected/biases"
  input: "Model/fully_connected/weights"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "Train/Model/Model/fully_connected/biases/Adam"
  input: "Train/Model/Model/fully_connected/biases/Adam_1"
  input: "Train/Model/Model/fully_connected/weights/Adam"
  input: "Train/Model/Model/fully_connected/weights/Adam_1"
  input: "Train/Model/beta1_power"
  input: "Train/Model/beta2_power"
  input: "Train/Model/global_step"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/fully_connected/biases"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Model/fully_connected/biases"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Model/fully_connected/weights"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/fully_connected/biases/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "Train/Model/Model/fully_connected/biases/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/fully_connected/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "Train/Model/Model/fully_connected/biases/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_22/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_22/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_22"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_22/tensor_name"
  input: "save/restore_slice_22/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "Train/Model/Model/fully_connected/weights/Adam"
  input: "save/restore_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_23/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Model/fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_23/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_23"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_23/tensor_name"
  input: "save/restore_slice_23/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "Train/Model/Model/fully_connected/weights/Adam_1"
  input: "save/restore_slice_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_24/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_24/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_24"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_24/tensor_name"
  input: "save/restore_slice_24/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "Train/Model/beta1_power"
  input: "save/restore_slice_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_25/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_25/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_25"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_25/tensor_name"
  input: "save/restore_slice_25/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "Train/Model/beta2_power"
  input: "save/restore_slice_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_26/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_26/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_26"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_26/tensor_name"
  input: "save/restore_slice_26/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "Train/Model/global_step"
  input: "save/restore_slice_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Model/fully_connected/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Model/fully_connected/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "Train/Model/global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "Train/Model/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "Train/Model/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/fully_connected/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/fully_connected/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/fully_connected/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "Train/Model/Model/fully_connected/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/pack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 27
          }
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
        string_val: "Model/fully_connected/weights"
        string_val: "Model/fully_connected/biases"
        string_val: "Train/Model/global_step"
        string_val: "Train/Model/beta1_power"
        string_val: "Train/Model/beta2_power"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam"
        string_val: "Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1"
        string_val: "Train/Model/Model/fully_connected/weights/Adam"
        string_val: "Train/Model/Model/fully_connected/weights/Adam_1"
        string_val: "Train/Model/Model/fully_connected/biases/Adam"
        string_val: "Train/Model/Model/fully_connected/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 27
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "Concat"
  input: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Assign"
  input: "^Model/fully_connected/weights/Assign"
  input: "^Model/fully_connected/biases/Assign"
  input: "^Train/Model/global_step/Assign"
  input: "^Train/Model/beta1_power/Assign"
  input: "^Train/Model/beta2_power/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Adam_1/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Adam_1/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Adam_1/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Adam_1/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Adam_1/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam/Assign"
  input: "^Train/Model/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Adam_1/Assign"
  input: "^Train/Model/Model/fully_connected/weights/Adam/Assign"
  input: "^Train/Model/Model/fully_connected/weights/Adam_1/Assign"
  input: "^Train/Model/Model/fully_connected/biases/Adam/Assign"
  input: "^Train/Model/Model/fully_connected/biases/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
versions {
  producer: 15
}
